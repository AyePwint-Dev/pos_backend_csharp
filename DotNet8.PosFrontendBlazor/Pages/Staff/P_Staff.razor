@page "/staff"

@inject IJSRuntime JSRuntime

<MudText Typo="Typo.h6">
    <MudIconButton Icon="@Icons.Material.Filled.Add" aria-label="Create" OnClick="Popup"></MudIconButton>
    Staff
</MudText>


@if (ResponseModel is not null)
{

    int count = 0;
    <MudSimpleTable Style="overflow-x: auto;">
        <thead>
            <tr>
                <th>No.</th>
                <th>Staff Code</th>
                <th>Staff Name</th>
                <th>Date Of Birth</th>
                <th>Mobile No</th>
                <th>Address</th>
                <th>Gender</th>
                <th>Position</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ResponseModel.Data.Staff)
            {
                <tr>
                    <td>@(++count)</td>
                    <td>@item.StaffCode</td>
                    <td>@item.StaffName</td>
                    <td>@item.DateOfBirth.ToString("dd-MMM-yyyy")</td>
                    <td>@item.MobileNo</td>
                    <td>@item.Address</td>
                    <td>@item.Gender</td>
                    <td>@item.Position</td>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
}

@code {
    private StaffListResponseModel? ResponseModel;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InjectService.EnableLoading();
            await List();
            StateHasChanged();
            await InjectService.DisableLoading();
        }
    }

    private async Task List()
    {
        ResponseModel = await HttpClientService.ExecuteAsync<StaffListResponseModel>(Endpoints.Staff, EnumHttpMethod.Get);
    }

    private async Task Create(StaffModel staff)
    {
        
       
            var response = await HttpClientService.ExecuteAsync<StaffResponseModel>(
            Endpoints.Staff,
            EnumHttpMethod.Post,
            new StaffRequestModel
                {
                    StaffCode = staff.StaffCode,
                    StaffName = staff.StaffName
                }
        );
        
        
    }

    private async Task Popup()
    {
        // MudBlazor.DialogOptions maxWidth = new MudBlazor.DialogOptions() {
        //     MaxWidth = MaxWidth.Small,
        //     FullWidth = true,
        //     DisableBackdropClick = true,
        //     CloseOnEscapeKey = false
        // };
        // var dialog = await DialogService.ShowAsync<P_StaffDialog>("New Staff", maxWidth);
        // var result = await dialog.Result;

        var result = await InjectService.ShowModalBoxAsync<P_StaffDialog>("New Staff");
        if (!result.Canceled)
        {
            await List();
        }
    }
}
